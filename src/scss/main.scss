@use "sass:meta";

// * abstracts < base < ...
// ! "!important" is in reverse order (just avoid to use it )
@layer abstracts,base ,components ,utilities;

// * Third party mixins
@import "gerillass";
@import "@syncfusion/ej2/material3-dark.css";
@import "https://fonts.googleapis.com/css2?family=Cairo:wght@200;300;400;500;600;700;800;900;1000&family=Rubik:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap";

@layer abstracts {
	@include meta.load-css("abstracts");
}

@layer base {
	@include meta.load-css("base");
}

@layer components {
	@include meta.load-css("components");
}

@layer utilities {
	@include meta.load-css("utilities");
}

// * old method: this does not solve specifications css problem
// *    for example if the "abstract" has a style is higher specifications then the same style in the "base" is not overridden
// *    use new shiny css feature "@layer" to fix specifications issues ..
// *    to wrap @use in layer use "meta.load-css" mixins from 'sass:meta'

// 1. Configuration and helpers
// @use "abstracts";

// 2. Base stuff
// @use "base";

// 3. Components
// @use "components";

// 4. Layout-related sections
// @use "layout";

// 5. Page-specific styles
// @use "pages";

// 6. Themes styles
// @use "themes";

// 7. Frameworks / library's
// @use "utilities";

// 8. Overrides Frameworks / library's
// @use "utilities-override";
